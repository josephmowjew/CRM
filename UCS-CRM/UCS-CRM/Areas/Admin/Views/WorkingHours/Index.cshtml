@model IEnumerable<UCS_CRM.Core.Models.WorkingHours>
@inject UCS_CRM.Core.Services.IDateTimeService DateTimeService

@{
    ViewData["Title"] = "Working Hours";
    Layout = "~/Areas/Manager/Views/shared/_Layout.cshtml";

    string FormatTimeSpan(TimeSpan time)
    {
        return DateTime.Today.Add(time).ToString("hh:mm tt");
    }
}

<div class="card">
    <div class="card-header">
        <div class="d-flex justify-content-between align-items-center">
            <h4 class="text-uppercase mb-0">Working Hours</h4>
            <a asp-action="Create" class="btn btn-primary">
                <i class="mdi mdi-plus"></i> Add Working Hours
            </a>
        </div>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>Day</th>
                        <th>Start Time</th>
                        <th>End Time</th>
                        <th>Break Start</th>
                        <th>Break End</th>
                        <th>Working Day</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.DayOfWeek.ToString()</td>
                            <td>@FormatTimeSpan(item.StartTime)</td>
                            <td>@FormatTimeSpan(item.EndTime)</td>
                            <td>@FormatTimeSpan(item.BreakStartTime)</td>
                            <td>@FormatTimeSpan(item.BreakEndTime)</td>
                            <td>
                                @if (item.IsWorkingDay)
                                {
                                    <span class="badge bg-success">Yes</span>
                                }
                                else
                                {
                                    <span class="badge bg-danger">No</span>
                                }
                            </td>
                            <td>
                                <div class="btn-group" role="group">
                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary btn-sm">
                                        <i class="mdi mdi-pencil"></i> Edit
                                    </a>
                                    <form asp-action="Delete" asp-route-id="@item.Id" method="post" class="d-inline delete-form">
                                        @Html.AntiForgeryToken()
                                        <button type="submit" class="btn btn-danger btn-sm">
                                            <i class="mdi mdi-delete"></i> Delete
                                        </button>
                                    </form>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        $(document).ready(function() {
            // Show success message if exists
            @if (TempData["SuccessMessage"] != null)
            {
                <text>
                Swal.fire({
                    title: 'Success!',
                    text: '@TempData["SuccessMessage"]',
                    icon: 'success',
                    confirmButtonColor: '#3085d6'
                });
                </text>
            }

            // Show error message if exists
            @if (TempData["ErrorMessage"] != null)
            {
                <text>
                Swal.fire({
                    title: 'Error!',
                    text: '@TempData["ErrorMessage"]',
                    icon: 'error',
                    confirmButtonColor: '#d33'
                });
                </text>
            }

            // Handle delete confirmation
            $('.delete-form').on('submit', function(e) {
                e.preventDefault();
                const form = $(this);
                
                Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Yes, delete it!',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if (result.isConfirmed) {
                        form.off('submit').submit();
                    }
                });
            });
        });
    </script>
} 